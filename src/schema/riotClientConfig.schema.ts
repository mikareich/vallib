// automatically generated schema, 2024-08-09T15:43:54.104Z

import { z } from "zod"

const riotClientConfig_SCHEMA = 
  z.union([
    z.object({
      "chat.affinities": z.object({
        asia: z.string(),
        br1: z.string(),
        eu: z.string(),
        eun1: z.string(),
        euw1: z.string(),
        jp1: z.string(),
        kr1: z.string(),
        la1: z.string(),
        la2: z.string(),
        na1: z.string(),
        oc1: z.string(),
        pbe1: z.string(),
        ru1: z.string(),
        sea1: z.string(),
        sea2: z.string(),
        sea3: z.string(),
        tr1: z.string(),
        us: z.string(),
        "us-br1": z.string(),
        "us-la2": z.string(),
      }),
      "chat.affinity.enabled": z.boolean(),
      "chat.affinity_domains": z.object({
        asia: z.string(),
        br1: z.string(),
        eu: z.string(),
        eun1: z.string(),
        euw1: z.string(),
        jp1: z.string(),
        kr1: z.string(),
        la1: z.string(),
        la2: z.string(),
        na1: z.string(),
        oc1: z.string(),
        pbe1: z.string(),
        ru1: z.string(),
        sea1: z.string(),
        sea2: z.string(),
        sea3: z.string(),
        tr1: z.string(),
        us: z.string(),
        "us-br1": z.string(),
        "us-la2": z.string(),
      }),
      "chat.affinity_hints": z.object({
        br1: z.array(z.string()),
        eun1: z.array(z.string()),
        euw1: z.array(z.string()),
        jp1: z.array(z.string()),
        kr1: z.array(z.string()),
        la1: z.array(z.string()),
        la2: z.array(z.string()),
        na1: z.array(z.string()),
        oc1: z.array(z.string()),
        pbe1: z.array(z.string()),
        ru1: z.array(z.string()),
        tr1: z.array(z.string()),
      }),
      "chat.aggressive_scan.enabled": z.boolean(),
      "chat.allow_bad_cert.enabled": z.boolean(),
      "chat.auto_query_msg_history.enabled": z.boolean(),
      "chat.default_mobile_product_id": z.string(),
      "chat.disable_chat_restriction_muted_system_message": z.boolean(),
      "chat.force_filter.enabled": z.boolean(),
      "chat.game_name_tag_line.enabled": z.boolean(),
      "chat.host": z.string(),
      "chat.immediate_connect_products": z.array(z.string()),
      "chat.port": z.number(),
      "chat.protocol_preference": z.string(),
      "chat.replace_rich_messages": z.boolean(),
      "chat.require_jwt_presence.league_of_legends.enabled": z.boolean(),
      "chat.require_keystone_presence.enabled": z.boolean(),
      "chat.require_multi_game_presence_rxep.enabled": z.boolean(),
      "chat.settings.playerPreferencesKey": z.string(),
      "chat.use_tls.enabled": z.boolean(),
      "chat.xmpp_stanza_response_telemetry_allowed_codes": z.array(z.number()),
      "chat.xmpp_stanza_response_telemetry_allowed_iqids": z.array(z.string()),
      "keystone.client.feature_flags.chrome_devtools.enabled": z.boolean(),
      "keystone.client.feature_flags.fist_animation.enabled": z.boolean(),
      "keystone.client.feature_flags.gaWarning.enabled": z.boolean(),
      "keystone.client.feature_flags.nav_panel.enabled": z.boolean(),
      "keystone.client.feature_flags.playerReporting.enabled": z.boolean(),
      "keystone.client.feature_flags.restriction.enabled": z.boolean(),
      "keystone.cohorts.RC_15.new_lifecycle": z.string(),
      "keystone.cohorts.peek_layout": z.string(),
      "keystone.first-party-fulfillment": z.object({
        enabled: z.boolean(),
        "riot-pay-base-url": z.string(),
      }),
      "keystone.first-party-fulfillment.sonyregions": z.object({}),
      "keystone.ga-warning.ga_warning_loc_overrides": z.object({
        ar_AE: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        cs_CZ: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        de_DE: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        el_GR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_AU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_GB: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_PH: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_SG: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_US: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_AR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_ES: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_MX: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        fr_FR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        hu_HU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        it_IT: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ja_JP: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        pl_PL: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        pt_BR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ro_RO: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ru_RU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        tr_TR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        vi_VN: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_CN: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_MY: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_TW: z.object({ INAPPROPRIATE_TEXT: z.string() }),
      }),
      "keystone.loyalty.config": z.object({
        "league_of_legends.live.br": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.eune": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.euw": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.la1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.la2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.me1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.na": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.oc1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.ph2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.ru": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.sg2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.th2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.tr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.tw2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.vn2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.pbe.pbe": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends_game.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "valorant.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
      }),
      "keystone.player-reporting.report_collector_url": z.string(),
      "keystone.player-reporting.report_collector_url_by_affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "keystone.restriction.product_ids_by_scope.ares": z.array(z.string()),
      "keystone.restriction.product_ids_by_scope.bacon": z.array(z.string()),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatCommandTelemetry":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatDisconnectEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatLoginState":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatStanzaResponse":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.CommercePluginSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ConsoleAccountSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.EndpointResult":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ErrorLog":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ExternalWebRequest":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.FirstPartyFulfillmentSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.GameSessionOperation":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.PayMobile":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.PlayerAccountAliasSanitizedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ProductIntegrationAppRepairEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ProductIntegrationEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOAuthLoginSteps":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOMobileAccountDeletionUI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOSignOnAttempt":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciPenaltyNotificationPlayerActionEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciReporterFeedbackAcknowledgedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciReporterFeedbackReceivedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciWarningAcknowledgementEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciWarningFoundUnacknowledgedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgServiceAvailability":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgServiceLatency":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.SdkAppModuleShutdownData":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.SocialAuth":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.StartDesktopPurchase":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.TermsOfServiceEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VNGSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VivoxCallStats":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRCapture":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRFailureMonitoring":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRInitialization":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRUpload":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.endpoint.send_deprecated": z.boolean(),
      "keystone.riotgamesapi.telemetry.endpoint.send_failure": z.boolean(),
      "keystone.riotgamesapi.telemetry.endpoint.send_success": z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatCommandTelemetry":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatDisconnectEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatLoginState":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatStanzaResponse":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.CommercePluginSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ConsoleAccountSLI":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.EndpointResult":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ErrorLog":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ExternalWebRequest":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.FirstPartyFulfillmentSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.GameSessionOperation":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.PayMobile":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.PlayerAccountAliasSanitizedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ProductIntegrationAppRepairEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ProductIntegrationEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOAuthLoginSteps":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOMobileAccountDeletionUI":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOSignOnAttempt":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciPenaltyNotificationPlayerActionEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciReporterFeedbackAcknowledgedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciReporterFeedbackReceivedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciWarningAcknowledgementEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciWarningFoundUnacknowledgedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgServiceAvailability":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgServiceLatency":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.SdkAppModuleShutdownData":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.SocialAuth":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.StartDesktopPurchase":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.TermsOfServiceEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VNGSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VivoxCallStats":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRCapture":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRFailureMonitoring":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRInitialization":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRUpload":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatSLI":
        z.string(),
      "keystone.telemetry.ap.disabled_events.riotclient__TimeSample__v4":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.rpg__ServiceAvailability__v2":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.rpg__ServiceLatency__v2":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.schemaless__ExternalWebRequest__v1":
        z.boolean(),
      "keystone.telemetry.endpoint.send_deprecated": z.boolean(),
      "keystone.telemetry.endpoint.send_failure": z.boolean(),
      "keystone.telemetry.endpoint.send_success": z.boolean(),
      "keystone.telemetry.metrics_enabled": z.boolean(),
      "keystone.telemetry.metrics_public_api_key": z.string(),
      "keystone.telemetry.newrelic_api_key": z.string(),
      "keystone.telemetry.newrelic_events_v2_enabled": z.boolean(),
      "keystone.telemetry.newrelic_metrics_v1_enabled": z.boolean(),
      "keystone.telemetry.newrelic_schemaless_events_v2_enabled": z.boolean(),
      "keystone.telemetry.opentelemetry.disabled_events.riotclient__TimeSample__v4":
        z.boolean(),
      "lol.client_settings.chat.allow_group_by_game": z.boolean(),
      "lol.client_settings.chat.champ_select_domain_name": z.string(),
      "lol.client_settings.chat.club_domain_name": z.string(),
      "lol.client_settings.chat.custom_game_domain_name": z.string(),
      "lol.client_settings.chat.custom_team_domain_name": z.string(),
      "lol.client_settings.chat.p2p_domain_name": z.string(),
      "lol.client_settings.chat.platform_to_federated_region": z.object({
        BR1: z.string(),
        EUN1: z.string(),
        EUW1: z.string(),
        JP1: z.string(),
        KR: z.string(),
        LA1: z.string(),
        LA2: z.string(),
        NA1: z.string(),
        OC1: z.string(),
        PBE1: z.string(),
        PH2: z.string(),
        RU: z.string(),
        TR1: z.string(),
        TW2: z.string(),
        VN2: z.string(),
      }),
      "lol.client_settings.chat.post_game_domain_name": z.string(),
      "lol.client_settings.chat.query_sumid_batched_ledge": z.boolean(),
      "lol.client_settings.chat.query_sumid_blocked": z.boolean(),
      "lol.client_settings.chat.query_sumid_friend_requests": z.boolean(),
      "lol.client_settings.chat.query_sumid_muc_participants": z.boolean(),
      "lol.client_settings.chat.query_sumid_offline_friends": z.boolean(),
      "lol.client_settings.chat.query_sumid_online_friends": z.boolean(),
      "lol.client_settings.chat.queue_job_grace_seconds": z.number(),
      "lol.client_settings.chat.scoped_conversations.domains": z.array(
        z.string()
      ),
      "lol.client_settings.chat.scoped_conversations.enabled": z.boolean(),
      "lol.client_settings.chat.silence_chat_while_in_game": z.boolean(),
      "lol.client_settings.chat.update_session_platform_id": z.boolean(),
      "lol.client_settings.deepLinks": z.object({
        launchLorEnabled: z.boolean(),
        launchLorUrl: z.string(),
      }),
      "lol.client_settings.deprecation.32_bit": z.object({
        date: z.string(),
        version: z.number(),
      }),
      "lol.client_settings.event_hub.activation": z.object({
        activationSpreadSeconds: z.number(),
        hubEnabled: z.boolean(),
      }),
      "lol.client_settings.event_hub.event_overrides": z.object({
        "1363af52-d6b9-4dd3-a3fb-2c7965241570": z.object({
          eventEndDate: z.string(),
          eventProgressEndDate: z.string(),
        }),
      }),
      "lol.client_settings.event_hub.event_shop": z.object({}),
      "lol.client_settings.event_hub.hall_of_legends": z.object({}),
      "lol.client_settings.honeyfruit.account_claiming_enabled": z.boolean(),
      "lol.client_settings.honeyfruit.linking_settings_button_available":
        z.boolean(),
      "lol.client_settings.inventory.use_lis_for_champions_and_skins_inventory":
        z.boolean(),
      "lol.client_settings.inventory_service.use_ledge": z.boolean(),
      "lol.client_settings.league_edge.enabled_services": z.object({
        AccountVerification: z.boolean(),
        CareerStats: z.boolean(),
        ChampionMastery: z.boolean(),
        Clash: z.boolean(),
        EndOfGameStats: z.boolean(),
        GSMv3: z.boolean(),
        GameAgnosticMatchHistory: z.boolean(),
        Honor: z.boolean(),
        Leagues: z.boolean(),
        Missions: z.boolean(),
        Parties: z.boolean(),
        PlayerBehavior: z.boolean(),
        PublishingContent: z.boolean(),
        Summoner: z.boolean(),
        Tastes: z.boolean(),
        Teambuilder: z.boolean(),
      }),
      "lol.client_settings.loadouts.use_ledge": z.boolean(),
      "lol.client_settings.login.use_gaps_login_flow": z.boolean(),
      "lol.client_settings.mena_migration.modalConfig": z.object({
        articleUrl: z.string(),
        enabled: z.boolean(),
        expirationDate: z.string(),
        targetedCountries: z.array(z.string()),
        targetedRegions: z.array(z.string()),
      }),
      "lol.client_settings.parties.bot_enabled_champions": z.array(z.number()),
      "lol.client_settings.patch.retrieve_all_supported_game_versions":
        z.boolean(),
      "lol.client_settings.player_behavior.display_reform_card": z.boolean(),
      "lol.client_settings.player_behavior.display_v1_ban_notifications":
        z.boolean(),
      "lol.client_settings.player_behavior.use_reform_card_v2": z.boolean(),
      "lol.client_settings.player_platform_edge.session_refresh_enabled":
        z.boolean(),
      "lol.client_settings.progression.player_platform_edge.enabled":
        z.boolean(),
      "lol.client_settings.purchase_widget.player_platform_edge.enabled":
        z.boolean(),
      "lol.client_settings.purchase_widget.use_ledge": z.boolean(),
      "lol.client_settings.queues.game_select_pip_queue_ids": z.array(
        z.number()
      ),
      "lol.client_settings.queues.use_operational_config": z.boolean(),
      "lol.client_settings.riotclient.hold_upgrade_on_bad_path": z.boolean(),
      "lol.client_settings.riotclient.live_installer_key": z.string(),
      "lol.client_settings.rms.use_proxy_to_riot_client.player": z.boolean(),
      "lol.client_settings.spectator_settings": z.object({
        isEnabled: z.boolean(),
        isSpectatorDelayConfigurable: z.boolean(),
        isUsingOperationalConfig: z.boolean(),
      }),
      "lol.client_settings.statstones.use_ledge": z.boolean(),
      "lol.client_settings.store.use_ledge": z.boolean(),
      "lol.client_settings.tft.tft_npe": z.object({
        enabled: z.boolean(),
        queueBypass: z.boolean(),
        shouldShowNPEQueue: z.boolean(),
      }),
      "lol.client_settings.yourshop": z.object({
        Active: z.boolean(),
        PromotionEndDate: z.string(),
        PromotionName: z.string(),
        PromotionStartDate: z.string(),
        ThemedBackground: z.boolean(),
      }),
      "lol.game_client_settings.gsm_loadouts_enabled": z.boolean(),
      "lol.game_client_settings.logging.enable_http_public_logs": z.boolean(),
      "lol.game_client_settings.logging.enable_rms_public_logs": z.boolean(),
      "lol.game_client_settings.queues_displayed": z.array(z.number()),
      "lol.game_client_settings.tft_npe": z.object({
        enabled: z.boolean(),
        queueBypass: z.boolean(),
        shouldShowNPEQueue: z.boolean(),
      }),
      "lol.game_client_settings.tft_randomize_loadouts": z.object({
        enabled: z.boolean(),
      }),
      "payments.pay_mobile.game-codes": z.object({
        "com.riotgames.league.teamfighttactics": z.string(),
        "com.riotgames.league.teamfighttacticstw": z.string(),
        "com.riotgames.league.teamfighttacticsvn": z.string(),
        "com.riotgames.league.wildrift": z.string(),
        "com.riotgames.league.wildrifttw": z.string(),
        "com.riotgames.league.wildriftvn": z.string(),
        "com.riotgames.legendsofruneterra": z.string(),
        "com.riotgames.legendsofruneterratw": z.string(),
        "com.riotgames.legendsofruneterravn": z.string(),
        "com.riotgames.pub.valorant.dev": z.string(),
        "com.riotgames.rnd.tftmobile": z.string(),
        "com.riotgames.smg.league.wildrift": z.string(),
        "com.riotgames.smg.league.wildrifttw": z.string(),
        "com.riotgames.smg.league.wildriftvn": z.string(),
      }),
      "payments.pay_mobile.platform-type.lor": z.string(),
      "payments.pay_mobile.platform-type.tft": z.string(),
      "payments.pay_mobile.platform-type.valorant": z.string(),
      "payments.pay_mobile.platform-type.wildrift": z.string(),
      "payments.pay_mobile.platforms.lor": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_mobile.platforms.valorant": z.object({
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_mobile.platforms.wildrift": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platform-type.lor": z.string(),
      "payments.pay_plugin.platform-type.lorm": z.string(),
      "payments.pay_plugin.platform-type.tft": z.string(),
      "payments.pay_plugin.platforms.lor": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BDI: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BVT: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CCK: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        COM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ERI: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESH: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        FSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HMD: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PCN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RKS: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SHN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SJM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SSD: z.object({ platformCode: z.string(), pmc: z.string() }),
        STP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCD: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TLS: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VGB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        WSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.lorm": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.valorant": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BDI: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BVT: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CCK: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        COM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ERI: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESH: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        FSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HMD: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PCN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SHN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SJM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SSD: z.object({ platformCode: z.string(), pmc: z.string() }),
        STP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCD: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TLS: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VGB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        WSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.valorant.ext-main-shipping": z.object({
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.product-storefronts.lor": z.object({
        bacon: z.string(),
      }),
      "payments.pay_plugin.product-storefronts.lor.live": z.object({
        bacon: z.string(),
      }),
      "payments.pay_plugin.product-storefronts.valorant.live": z.object({
        ares: z.string(),
        valorant: z.string(),
      }),
      "rms.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.affinity.enabled": z.boolean(),
      "rms.affinity_login.enabled": z.boolean(),
      "rms.esports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.lolesports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.riotesports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "sanitizer.level_1_filter": z.string(),
    }),
    z.object({
      "chat.affinities": z.object({
        asia: z.string(),
        br1: z.string(),
        eu: z.string(),
        eun1: z.string(),
        euw1: z.string(),
        jp1: z.string(),
        kr1: z.string(),
        la1: z.string(),
        la2: z.string(),
        na1: z.string(),
        oc1: z.string(),
        pbe1: z.string(),
        ru1: z.string(),
        sea1: z.string(),
        sea2: z.string(),
        sea3: z.string(),
        tr1: z.string(),
        us: z.string(),
        "us-br1": z.string(),
        "us-la2": z.string(),
      }),
      "chat.affinity.enabled": z.boolean(),
      "chat.affinity_domains": z.object({
        asia: z.string(),
        br1: z.string(),
        eu: z.string(),
        eun1: z.string(),
        euw1: z.string(),
        jp1: z.string(),
        kr1: z.string(),
        la1: z.string(),
        la2: z.string(),
        na1: z.string(),
        oc1: z.string(),
        pbe1: z.string(),
        ru1: z.string(),
        sea1: z.string(),
        sea2: z.string(),
        sea3: z.string(),
        tr1: z.string(),
        us: z.string(),
        "us-br1": z.string(),
        "us-la2": z.string(),
      }),
      "chat.affinity_hints": z.object({
        br1: z.array(z.string()),
        eun1: z.array(z.string()),
        euw1: z.array(z.string()),
        jp1: z.array(z.string()),
        kr1: z.array(z.string()),
        la1: z.array(z.string()),
        la2: z.array(z.string()),
        na1: z.array(z.string()),
        oc1: z.array(z.string()),
        pbe1: z.array(z.string()),
        ru1: z.array(z.string()),
        tr1: z.array(z.string()),
      }),
      "chat.aggressive_scan.enabled": z.boolean(),
      "chat.allow_bad_cert.enabled": z.boolean(),
      "chat.auto_query_msg_history.enabled": z.boolean(),
      "chat.default_mobile_product_id": z.string(),
      "chat.disable_chat_restriction_muted_system_message": z.boolean(),
      "chat.force_filter.enabled": z.boolean(),
      "chat.game_name_tag_line.enabled": z.boolean(),
      "chat.host": z.string(),
      "chat.immediate_connect_products": z.array(z.string()),
      "chat.port": z.number(),
      "chat.protocol_preference": z.string(),
      "chat.replace_rich_messages": z.boolean(),
      "chat.require_jwt_presence.league_of_legends.enabled": z.boolean(),
      "chat.require_keystone_presence.enabled": z.boolean(),
      "chat.require_multi_game_presence_rxep.enabled": z.boolean(),
      "chat.settings.playerPreferencesKey": z.string(),
      "chat.settings.playerPreferencesURI": z.string(),
      "chat.use_tls.enabled": z.boolean(),
      "chat.xmpp_stanza_response_telemetry_allowed_codes": z.array(z.number()),
      "chat.xmpp_stanza_response_telemetry_allowed_iqids": z.array(z.string()),
      "keystone.client.feature_flags.chrome_devtools.enabled": z.boolean(),
      "keystone.client.feature_flags.fist_animation.enabled": z.boolean(),
      "keystone.client.feature_flags.gaWarning.enabled": z.boolean(),
      "keystone.client.feature_flags.nav_panel.enabled": z.boolean(),
      "keystone.client.feature_flags.playerReporting.enabled": z.boolean(),
      "keystone.client.feature_flags.restriction.enabled": z.boolean(),
      "keystone.cohorts.RC_15.new_lifecycle": z.string(),
      "keystone.cohorts.peek_layout": z.string(),
      "keystone.first-party-fulfillment": z.object({
        enabled: z.boolean(),
        "riot-pay-base-url": z.string(),
      }),
      "keystone.first-party-fulfillment.sonyregions": z.object({}),
      "keystone.ga-warning.ga_warning_loc_overrides": z.object({
        ar_AE: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        cs_CZ: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        de_DE: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        el_GR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_AU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_GB: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_PH: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_SG: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        en_US: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_AR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_ES: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        es_MX: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        fr_FR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        hu_HU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        it_IT: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ja_JP: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        pl_PL: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        pt_BR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ro_RO: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        ru_RU: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        tr_TR: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        vi_VN: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_CN: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_MY: z.object({ INAPPROPRIATE_TEXT: z.string() }),
        zh_TW: z.object({ INAPPROPRIATE_TEXT: z.string() }),
      }),
      "keystone.loyalty.config": z.object({
        "league_of_legends.live.br": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.eune": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.euw": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.la1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.la2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.me1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.na": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.oc1": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.ph2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.ru": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.sg2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.th2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.tr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.tw2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.live.vn2": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends.pbe.pbe": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          telemetryEnabled: z.boolean(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "league_of_legends_game.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
        "valorant.live.kr": z.object({
          backendUrl: z.string(),
          enabled: z.boolean(),
          gameShard: z.string(),
          heartbeatInterval: z.number(),
          webRequestInitialRetryDelayInMilliSec: z.number(),
          webRequestMaxRetryDelayInMilliSec: z.number(),
          webRequestRetryCount: z.number(),
          webRequestTimeoutInSec: z.number(),
        }),
      }),
      "keystone.player-reporting.report_collector_url": z.string(),
      "keystone.player-reporting.report_collector_url_by_affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "keystone.restriction.product_ids_by_scope.ares": z.array(z.string()),
      "keystone.restriction.product_ids_by_scope.bacon": z.array(z.string()),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatCommandTelemetry":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatDisconnectEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatLoginState":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ChatStanzaResponse":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ConsoleAccountSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.EndpointResult":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ErrorLog":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ExternalWebRequest":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.FirstPartyFulfillmentSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.GameSessionOperation":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.PayMobile":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.PlayerAccountAliasSanitizedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ProductIntegrationAppRepairEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.ProductIntegrationEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOAuthLoginSteps":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOMobileAccountDeletionUI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RSOSignOnAttempt":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciPenaltyNotificationPlayerActionEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciReporterFeedbackAcknowledgedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciReporterFeedbackReceivedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciWarningAcknowledgementEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgPciWarningFoundUnacknowledgedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgServiceAvailability":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.RpgServiceLatency":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.SdkAppModuleShutdownData":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.SocialAuth":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.StartDesktopPurchase":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.TermsOfServiceEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VNGSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VivoxCallStats":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRCapture":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRFailureMonitoring":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRInitialization":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatCSRUpload":
        z.string(),
      "keystone.riotgamesapi.telemetry.analytics_platform_allowed_events.VoiceChatSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.endpoint.send_deprecated": z.boolean(),
      "keystone.riotgamesapi.telemetry.endpoint.send_failure": z.boolean(),
      "keystone.riotgamesapi.telemetry.endpoint.send_success": z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatCommandTelemetry":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatDisconnectEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatLoginState":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ChatStanzaResponse":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.CommercePluginSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ConsoleAccountSLI":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.EndpointResult":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ErrorLog":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ExternalWebRequest":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.FirstPartyFulfillmentSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.GameSessionOperation":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.PayMobile":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.PlayerAccountAliasSanitizedEvent":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ProductIntegrationAppRepairEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.ProductIntegrationEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOAuthLoginSteps":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOMobileAccountDeletionUI":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RSOSignOnAttempt":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciPenaltyNotificationPlayerActionEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciReporterFeedbackAcknowledgedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciReporterFeedbackReceivedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciWarningAcknowledgementEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgPciWarningFoundUnacknowledgedEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgServiceAvailability":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.RpgServiceLatency":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.SdkAppModuleShutdownData":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.SocialAuth":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.StartDesktopPurchase":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.TermsOfServiceEvent":
        z.boolean(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VNGSLI":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VivoxCallStats":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRCapture":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRFailureMonitoring":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRInitialization":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatCSRUpload":
        z.string(),
      "keystone.riotgamesapi.telemetry.opentelemetry_allowed_events.VoiceChatSLI":
        z.string(),
      "keystone.telemetry.ap.disabled_events.riotclient__TimeSample__v4":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.rpg__ServiceAvailability__v2":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.rpg__ServiceLatency__v2":
        z.boolean(),
      "keystone.telemetry.ap.disabled_events.schemaless__ExternalWebRequest__v1":
        z.boolean(),
      "keystone.telemetry.endpoint.send_deprecated": z.boolean(),
      "keystone.telemetry.endpoint.send_failure": z.boolean(),
      "keystone.telemetry.endpoint.send_success": z.boolean(),
      "keystone.telemetry.metrics_enabled": z.boolean(),
      "keystone.telemetry.metrics_public_api_key": z.string(),
      "keystone.telemetry.newrelic_api_key": z.string(),
      "keystone.telemetry.newrelic_events_v2_enabled": z.boolean(),
      "keystone.telemetry.newrelic_metrics_v1_enabled": z.boolean(),
      "keystone.telemetry.newrelic_schemaless_events_v2_enabled": z.boolean(),
      "keystone.telemetry.opentelemetry.disabled_events.riotclient__TimeSample__v4":
        z.boolean(),
      "lol.client_settings.chat.allow_group_by_game": z.boolean(),
      "lol.client_settings.chat.champ_select_domain_name": z.string(),
      "lol.client_settings.chat.club_domain_name": z.string(),
      "lol.client_settings.chat.custom_game_domain_name": z.string(),
      "lol.client_settings.chat.custom_team_domain_name": z.string(),
      "lol.client_settings.chat.p2p_domain_name": z.string(),
      "lol.client_settings.chat.platform_to_federated_region": z.object({
        BR1: z.string(),
        EUN1: z.string(),
        EUW1: z.string(),
        JP1: z.string(),
        KR: z.string(),
        LA1: z.string(),
        LA2: z.string(),
        NA1: z.string(),
        OC1: z.string(),
        PBE1: z.string(),
        PH2: z.string(),
        RU: z.string(),
        TR1: z.string(),
        TW2: z.string(),
        VN2: z.string(),
      }),
      "lol.client_settings.chat.post_game_domain_name": z.string(),
      "lol.client_settings.chat.query_sumid_batched_ledge": z.boolean(),
      "lol.client_settings.chat.query_sumid_blocked": z.boolean(),
      "lol.client_settings.chat.query_sumid_friend_requests": z.boolean(),
      "lol.client_settings.chat.query_sumid_muc_participants": z.boolean(),
      "lol.client_settings.chat.query_sumid_offline_friends": z.boolean(),
      "lol.client_settings.chat.query_sumid_online_friends": z.boolean(),
      "lol.client_settings.chat.queue_job_grace_seconds": z.number(),
      "lol.client_settings.chat.scoped_conversations.domains": z.array(
        z.string()
      ),
      "lol.client_settings.chat.scoped_conversations.enabled": z.boolean(),
      "lol.client_settings.chat.silence_chat_while_in_game": z.boolean(),
      "lol.client_settings.chat.update_session_platform_id": z.boolean(),
      "lol.client_settings.deepLinks": z.object({
        launchLorEnabled: z.boolean(),
        launchLorUrl: z.string(),
      }),
      "lol.client_settings.deprecation.32_bit": z.object({
        date: z.string(),
        version: z.number(),
      }),
      "lol.client_settings.event_hub.activation": z.object({
        activationSpreadSeconds: z.number(),
        hubEnabled: z.boolean(),
      }),
      "lol.client_settings.event_hub.event_overrides": z.object({
        "1363af52-d6b9-4dd3-a3fb-2c7965241570": z.object({
          eventEndDate: z.string(),
          eventProgressEndDate: z.string(),
        }),
      }),
      "lol.client_settings.event_hub.event_shop": z.object({}),
      "lol.client_settings.event_hub.hall_of_legends": z.object({}),
      "lol.client_settings.honeyfruit.account_claiming_enabled": z.boolean(),
      "lol.client_settings.honeyfruit.linking_settings_button_available":
        z.boolean(),
      "lol.client_settings.inventory.use_lis_for_champions_and_skins_inventory":
        z.boolean(),
      "lol.client_settings.inventory_service.use_ledge": z.boolean(),
      "lol.client_settings.league_edge.enabled_services": z.object({
        AccountVerification: z.boolean(),
        CareerStats: z.boolean(),
        ChampionMastery: z.boolean(),
        Clash: z.boolean(),
        EndOfGameStats: z.boolean(),
        GSMv3: z.boolean(),
        GameAgnosticMatchHistory: z.boolean(),
        Honor: z.boolean(),
        Leagues: z.boolean(),
        Missions: z.boolean(),
        Parties: z.boolean(),
        PlayerBehavior: z.boolean(),
        PublishingContent: z.boolean(),
        Summoner: z.boolean(),
        Tastes: z.boolean(),
        Teambuilder: z.boolean(),
      }),
      "lol.client_settings.loadouts.use_ledge": z.boolean(),
      "lol.client_settings.login.use_gaps_login_flow": z.boolean(),
      "lol.client_settings.mena_migration.modalConfig": z.object({
        articleUrl: z.string(),
        enabled: z.boolean(),
        expirationDate: z.string(),
        targetedCountries: z.array(z.string()),
        targetedRegions: z.array(z.string()),
      }),
      "lol.client_settings.parties.bot_enabled_champions": z.array(z.number()),
      "lol.client_settings.patch.retrieve_all_supported_game_versions":
        z.boolean(),
      "lol.client_settings.player_behavior.display_reform_card": z.boolean(),
      "lol.client_settings.player_behavior.display_v1_ban_notifications":
        z.boolean(),
      "lol.client_settings.player_behavior.use_reform_card_v2": z.boolean(),
      "lol.client_settings.player_platform_edge.session_refresh_enabled":
        z.boolean(),
      "lol.client_settings.progression.player_platform_edge.enabled":
        z.boolean(),
      "lol.client_settings.purchase_widget.player_platform_edge.enabled":
        z.boolean(),
      "lol.client_settings.purchase_widget.use_ledge": z.boolean(),
      "lol.client_settings.queues.game_select_pip_queue_ids": z.array(
        z.number()
      ),
      "lol.client_settings.queues.use_operational_config": z.boolean(),
      "lol.client_settings.riotclient.hold_upgrade_on_bad_path": z.boolean(),
      "lol.client_settings.riotclient.live_installer_key": z.string(),
      "lol.client_settings.rms.use_proxy_to_riot_client.player": z.boolean(),
      "lol.client_settings.spectator_settings": z.object({
        isEnabled: z.boolean(),
        isSpectatorDelayConfigurable: z.boolean(),
        isUsingOperationalConfig: z.boolean(),
      }),
      "lol.client_settings.statstones.use_ledge": z.boolean(),
      "lol.client_settings.store.use_ledge": z.boolean(),
      "lol.client_settings.tft.tft_npe": z.object({
        enabled: z.boolean(),
        queueBypass: z.boolean(),
        shouldShowNPEQueue: z.boolean(),
      }),
      "lol.client_settings.yourshop": z.object({
        Active: z.boolean(),
        PromotionEndDate: z.string(),
        PromotionName: z.string(),
        PromotionStartDate: z.string(),
        ThemedBackground: z.boolean(),
      }),
      "lol.game_client_settings.gsm_loadouts_enabled": z.boolean(),
      "lol.game_client_settings.logging.enable_http_public_logs": z.boolean(),
      "lol.game_client_settings.logging.enable_rms_public_logs": z.boolean(),
      "lol.game_client_settings.queues_displayed": z.array(z.number()),
      "lol.game_client_settings.tft_npe": z.object({
        enabled: z.boolean(),
        queueBypass: z.boolean(),
        shouldShowNPEQueue: z.boolean(),
      }),
      "lol.game_client_settings.tft_randomize_loadouts": z.object({
        enabled: z.boolean(),
      }),
      "payments.pay_mobile.game-codes": z.object({
        "com.riotgames.league.teamfighttactics": z.string(),
        "com.riotgames.league.teamfighttacticstw": z.string(),
        "com.riotgames.league.teamfighttacticsvn": z.string(),
        "com.riotgames.league.wildrift": z.string(),
        "com.riotgames.league.wildrifttw": z.string(),
        "com.riotgames.league.wildriftvn": z.string(),
        "com.riotgames.legendsofruneterra": z.string(),
        "com.riotgames.legendsofruneterratw": z.string(),
        "com.riotgames.legendsofruneterravn": z.string(),
        "com.riotgames.pub.valorant.dev": z.string(),
        "com.riotgames.rnd.tftmobile": z.string(),
        "com.riotgames.smg.league.wildrift": z.string(),
        "com.riotgames.smg.league.wildrifttw": z.string(),
        "com.riotgames.smg.league.wildriftvn": z.string(),
      }),
      "payments.pay_mobile.platform-type.lor": z.string(),
      "payments.pay_mobile.platform-type.tft": z.string(),
      "payments.pay_mobile.platform-type.valorant": z.string(),
      "payments.pay_mobile.platform-type.wildrift": z.string(),
      "payments.pay_mobile.platforms.lor": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_mobile.platforms.valorant": z.object({
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_mobile.platforms.wildrift": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platform-type.lor": z.string(),
      "payments.pay_plugin.platform-type.lorm": z.string(),
      "payments.pay_plugin.platform-type.tft": z.string(),
      "payments.pay_plugin.platforms.lor": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BDI: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BVT: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CCK: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        COM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ERI: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESH: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        FSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HMD: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PCN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RKS: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SHN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SJM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SSD: z.object({ platformCode: z.string(), pmc: z.string() }),
        STP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCD: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TLS: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VGB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        WSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.lorm": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.valorant": z.object({
        ABW: z.object({ platformCode: z.string(), pmc: z.string() }),
        AFG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        AIA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ALB: z.object({ platformCode: z.string(), pmc: z.string() }),
        AND: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARE: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARG: z.object({ platformCode: z.string(), pmc: z.string() }),
        ARM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ASM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ATG: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        AUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        AZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        BDI: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BES: z.object({ platformCode: z.string(), pmc: z.string() }),
        BFA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGD: z.object({ platformCode: z.string(), pmc: z.string() }),
        BGR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BHS: z.object({ platformCode: z.string(), pmc: z.string() }),
        BIH: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLM: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLR: z.object({ platformCode: z.string(), pmc: z.string() }),
        BLZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        BMU: z.object({ platformCode: z.string(), pmc: z.string() }),
        BOL: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        BRN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BTN: z.object({ platformCode: z.string(), pmc: z.string() }),
        BVT: z.object({ platformCode: z.string(), pmc: z.string() }),
        BWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        CCK: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHE: z.object({ platformCode: z.string(), pmc: z.string() }),
        CHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        CIV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        COD: z.object({ platformCode: z.string(), pmc: z.string() }),
        COG: z.object({ platformCode: z.string(), pmc: z.string() }),
        COK: z.object({ platformCode: z.string(), pmc: z.string() }),
        COL: z.object({ platformCode: z.string(), pmc: z.string() }),
        COM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CPV: z.object({ platformCode: z.string(), pmc: z.string() }),
        CRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        CUW: z.object({ platformCode: z.string(), pmc: z.string() }),
        CXR: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYM: z.object({ platformCode: z.string(), pmc: z.string() }),
        CYP: z.object({ platformCode: z.string(), pmc: z.string() }),
        CZE: z.object({ platformCode: z.string(), pmc: z.string() }),
        DEU: z.object({ platformCode: z.string(), pmc: z.string() }),
        DJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        DMA: z.object({ platformCode: z.string(), pmc: z.string() }),
        DNK: z.object({ platformCode: z.string(), pmc: z.string() }),
        DOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        DZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        ECU: z.object({ platformCode: z.string(), pmc: z.string() }),
        EGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        ERI: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESH: z.object({ platformCode: z.string(), pmc: z.string() }),
        ESP: z.object({ platformCode: z.string(), pmc: z.string() }),
        EST: z.object({ platformCode: z.string(), pmc: z.string() }),
        ETH: z.object({ platformCode: z.string(), pmc: z.string() }),
        FIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        FJI: z.object({ platformCode: z.string(), pmc: z.string() }),
        FLK: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRA: z.object({ platformCode: z.string(), pmc: z.string() }),
        FRO: z.object({ platformCode: z.string(), pmc: z.string() }),
        FSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GAB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        GEO: z.object({ platformCode: z.string(), pmc: z.string() }),
        GGY: z.object({ platformCode: z.string(), pmc: z.string() }),
        GHA: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GIN: z.object({ platformCode: z.string(), pmc: z.string() }),
        GLP: z.object({ platformCode: z.string(), pmc: z.string() }),
        GMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNB: z.object({ platformCode: z.string(), pmc: z.string() }),
        GNQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRC: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRD: z.object({ platformCode: z.string(), pmc: z.string() }),
        GRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        GTM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUF: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUM: z.object({ platformCode: z.string(), pmc: z.string() }),
        GUY: z.object({ platformCode: z.string(), pmc: z.string() }),
        HKG: z.object({ platformCode: z.string(), pmc: z.string() }),
        HMD: z.object({ platformCode: z.string(), pmc: z.string() }),
        HND: z.object({ platformCode: z.string(), pmc: z.string() }),
        HRV: z.object({ platformCode: z.string(), pmc: z.string() }),
        HTI: z.object({ platformCode: z.string(), pmc: z.string() }),
        HUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        IND: z.object({ platformCode: z.string(), pmc: z.string() }),
        IOT: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRL: z.object({ platformCode: z.string(), pmc: z.string() }),
        IRQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISL: z.object({ platformCode: z.string(), pmc: z.string() }),
        ISR: z.object({ platformCode: z.string(), pmc: z.string() }),
        ITA: z.object({ platformCode: z.string(), pmc: z.string() }),
        JAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        JEY: z.object({ platformCode: z.string(), pmc: z.string() }),
        JOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        JPN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KAZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        KGZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        KHM: z.object({ platformCode: z.string(), pmc: z.string() }),
        KIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KNA: z.object({ platformCode: z.string(), pmc: z.string() }),
        KOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        KWT: z.object({ platformCode: z.string(), pmc: z.string() }),
        LAO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBN: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBR: z.object({ platformCode: z.string(), pmc: z.string() }),
        LBY: z.object({ platformCode: z.string(), pmc: z.string() }),
        LCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LIE: z.object({ platformCode: z.string(), pmc: z.string() }),
        LKA: z.object({ platformCode: z.string(), pmc: z.string() }),
        LSO: z.object({ platformCode: z.string(), pmc: z.string() }),
        LTU: z.object({ platformCode: z.string(), pmc: z.string() }),
        LUX: z.object({ platformCode: z.string(), pmc: z.string() }),
        LVA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAC: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        MAR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MCO: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDA: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MDV: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        MHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        MKD: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MLT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNE: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        MNP: z.object({ platformCode: z.string(), pmc: z.string() }),
        MOZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        MSR: z.object({ platformCode: z.string(), pmc: z.string() }),
        MTQ: z.object({ platformCode: z.string(), pmc: z.string() }),
        MUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MWI: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYS: z.object({ platformCode: z.string(), pmc: z.string() }),
        MYT: z.object({ platformCode: z.string(), pmc: z.string() }),
        NAM: z.object({ platformCode: z.string(), pmc: z.string() }),
        NCL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NER: z.object({ platformCode: z.string(), pmc: z.string() }),
        NFK: z.object({ platformCode: z.string(), pmc: z.string() }),
        NGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIC: z.object({ platformCode: z.string(), pmc: z.string() }),
        NIU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NLD: z.object({ platformCode: z.string(), pmc: z.string() }),
        NOR: z.object({ platformCode: z.string(), pmc: z.string() }),
        NPL: z.object({ platformCode: z.string(), pmc: z.string() }),
        NRU: z.object({ platformCode: z.string(), pmc: z.string() }),
        NZL: z.object({ platformCode: z.string(), pmc: z.string() }),
        OMN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAK: z.object({ platformCode: z.string(), pmc: z.string() }),
        PAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PCN: z.object({ platformCode: z.string(), pmc: z.string() }),
        PER: z.object({ platformCode: z.string(), pmc: z.string() }),
        PHL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PLW: z.object({ platformCode: z.string(), pmc: z.string() }),
        PNG: z.object({ platformCode: z.string(), pmc: z.string() }),
        POL: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRI: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRT: z.object({ platformCode: z.string(), pmc: z.string() }),
        PRY: z.object({ platformCode: z.string(), pmc: z.string() }),
        PSE: z.object({ platformCode: z.string(), pmc: z.string() }),
        PYF: z.object({ platformCode: z.string(), pmc: z.string() }),
        QAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        REU: z.object({ platformCode: z.string(), pmc: z.string() }),
        ROU: z.object({ platformCode: z.string(), pmc: z.string() }),
        RUS: z.object({ platformCode: z.string(), pmc: z.string() }),
        RWA: z.object({ platformCode: z.string(), pmc: z.string() }),
        SAU: z.object({ platformCode: z.string(), pmc: z.string() }),
        SDN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SGS: z.object({ platformCode: z.string(), pmc: z.string() }),
        SHN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SJM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SLV: z.object({ platformCode: z.string(), pmc: z.string() }),
        SMR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SOM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SPM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SRB: z.object({ platformCode: z.string(), pmc: z.string() }),
        SSD: z.object({ platformCode: z.string(), pmc: z.string() }),
        STP: z.object({ platformCode: z.string(), pmc: z.string() }),
        SUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVK: z.object({ platformCode: z.string(), pmc: z.string() }),
        SVN: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWE: z.object({ platformCode: z.string(), pmc: z.string() }),
        SWZ: z.object({ platformCode: z.string(), pmc: z.string() }),
        SXM: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYC: z.object({ platformCode: z.string(), pmc: z.string() }),
        SYR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TCD: z.object({ platformCode: z.string(), pmc: z.string() }),
        TGO: z.object({ platformCode: z.string(), pmc: z.string() }),
        THA: z.object({ platformCode: z.string(), pmc: z.string() }),
        TJK: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKL: z.object({ platformCode: z.string(), pmc: z.string() }),
        TKM: z.object({ platformCode: z.string(), pmc: z.string() }),
        TLS: z.object({ platformCode: z.string(), pmc: z.string() }),
        TON: z.object({ platformCode: z.string(), pmc: z.string() }),
        TTO: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUR: z.object({ platformCode: z.string(), pmc: z.string() }),
        TUV: z.object({ platformCode: z.string(), pmc: z.string() }),
        TWN: z.object({ platformCode: z.string(), pmc: z.string() }),
        TZA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UGA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UKR: z.object({ platformCode: z.string(), pmc: z.string() }),
        UMI: z.object({ platformCode: z.string(), pmc: z.string() }),
        URY: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
        UZB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VAT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VCT: z.object({ platformCode: z.string(), pmc: z.string() }),
        VEN: z.object({ platformCode: z.string(), pmc: z.string() }),
        VGB: z.object({ platformCode: z.string(), pmc: z.string() }),
        VIR: z.object({ platformCode: z.string(), pmc: z.string() }),
        VNM: z.object({ platformCode: z.string(), pmc: z.string() }),
        VUT: z.object({ platformCode: z.string(), pmc: z.string() }),
        WLF: z.object({ platformCode: z.string(), pmc: z.string() }),
        WSM: z.object({ platformCode: z.string(), pmc: z.string() }),
        YEM: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZAF: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZMB: z.object({ platformCode: z.string(), pmc: z.string() }),
        ZWE: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.platforms.valorant.ext-main-shipping": z.object({
        CAN: z.object({ platformCode: z.string(), pmc: z.string() }),
        MEX: z.object({ platformCode: z.string(), pmc: z.string() }),
        USA: z.object({ platformCode: z.string(), pmc: z.string() }),
      }),
      "payments.pay_plugin.product-storefronts.lor": z.object({
        bacon: z.string(),
      }),
      "payments.pay_plugin.product-storefronts.lor.live": z.object({
        bacon: z.string(),
      }),
      "payments.pay_plugin.product-storefronts.valorant.live": z.object({
        ares: z.string(),
        valorant: z.string(),
      }),
      "rms.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.affinity.enabled": z.boolean(),
      "rms.affinity_login.enabled": z.boolean(),
      "rms.esports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.lolesports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "rms.riotesports.affinities": z.object({
        asia: z.string(),
        eu: z.string(),
        sea: z.string(),
        us: z.string(),
      }),
      "sanitizer.level_1_filter": z.string(),
    }),
  ])


export default riotClientConfig_SCHEMA